#! /bin/bash

if [ -z "$GIR_DIR" ]; then
	echo '$GIR_DIR is not set!'
	exit
fi

if [ $# -eq 2 ]; then
	GIR_PIPELINE=$1
	GIR_MAT_SCRIPT=$2
elif [ $# -eq 3 ]; then
	GIR_PIPELINE=$1
	GIR_MAT_SCRIPT=$2
	GIR_DIR=$3
else
	echo -n "Enter pipeline name (without the .xml extension): "
	read GIR_PIPELINE
	echo -n "Enter matlab script name (without the .m extension): "
	read GIR_MAT_SCRIPT
fi

# create makefile
if [ -f "makefile" ]; then
	echo -n "Makefile already exists, overwrite [y|N] ?"
	read -n 1 CHOICE
	if [ "$CHOICE" != "y" ]; then
		echo "aborting..."
		exit
	fi
fi

cat <<ENDL > makefile
PIPELINE := ${GIR_PIPELINE}.xml
MAT_SCRIPT := ${GIR_MAT_SCRIPT}.m
GIR_DIR := $GIR_DIR

link: remove
	ln -s \${PWD}/\${PIPELINE} \${GIR_DIR}/pipelines/\${PIPELINE}
	ln -s \${PWD}/\${MAT_SCRIPT} \${GIR_DIR}/matlab_scripts/\${MAT_SCRIPT}

remove:
	rm -f \${GIR_DIR}/pipelines/\${PIPELINE}
	rm -f \${GIR_DIR}/matlab_scripts/\${MAT_SCRIPT}
ENDL

# create pipeline
if [ -f "${GIR_PIPELINE}.xml" ]; then
	echo -n "${GIR_PIPELINE}.xml already exists, overwrite [y|N]? "
	read -n 1 CHOICE
	if [ "$CHOICE" != "y" ]; then
		echo "aborting..."
		exit
	fi
fi

cat <<ENDL > ${GIR_PIPELINE}.xml
<gir_xml>
	<pipeline>

		<!-- plugins -->
		<plugin id="Plugin_Matlab" alias="matlab" />
		<!-- links -->
		<root alias="matlab" />

	</pipeline>
	<!-- configuration -->
	<config>

		<param_set plugin_alias="matlab">
			<param name="matlab_script" value="${GIR_MAT_SCRIPT}" />
			<param name="param1" value="1" />
			<param name="param2" value="2" />
		</param_set>

	</config>
</gir_xml>
ENDL

# create script
if [ -f "${GIR_MAT_SCRIPT}.m" ]; then
	echo -n "${GIR_MAT_SCRIPT}.m already exists, overwrite [y|N]? "
	read -n 1 CHOICE
	if [ "$CHOICE" != "y" ]; then
		echo "aborting..."
		exit
	fi
fi

cat <<ENDL > ${GIR_MAT_SCRIPT}.m
function [result] = ${GIR_MAT_SCRIPT}( mri_data, params, meas_data )
	% for easier debugging you can save mri_data and params so you can call
	% your script directly from matlab
	%save( '/some/save/location/example_script_data.mat' );

	param1 = str2num( params.param1 );
	param2 = str2num( params.param2 );

	result = mri_data;
ENDL
